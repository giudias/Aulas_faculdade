{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO4Kw6nE3jKjcVTF33neuWl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/giudias/Aulas_faculdade/blob/main/Untitled10.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Estrutura de seleção simples e composta (Aula 4) **"
      ],
      "metadata": {
        "id": "iGu3nY8Go3oZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Ler numero e apresentar se é maior ou menor que 3\n",
        "Numero= int(input(\"Digite um número inteiro:\"))\n",
        "\n",
        "if (Numero <= 3):\n",
        "  print (\"O numero apresentado é menor ou igual a 3\")\n",
        "else:\n",
        "  print(\"O numero apresentado é maior que 3\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "etqiwRYkgvHj",
        "outputId": "6ec8e878-cb9c-4d56-efb7-9c06dc515568"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro:4\n",
            "O numero apresentado é maior que 3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Ler numeros e apresnetar a diferença do maior pro menor\n",
        "A = int(input(\"Digite um número inteiro:\"))\n",
        "B = int(input(\"Digite um número inteiro:\"))\n",
        "\n",
        "if A > B:\n",
        "  diferença= A-B\n",
        "  print(f\"A diferença entre os números é:{diferença}\")\n",
        "else:\n",
        "  diferença= B-A\n",
        "  print(f\"A diferença entre os números é:{diferença}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TrKrRlGWhP_K",
        "outputId": "c331d987-bd5f-4120-b26c-3b358ed5c68a"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro:5\n",
            "Digite um número inteiro:-3\n",
            "A diferença entre os números é:8\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Ler dois numeros e mostrar qual e o maior\n",
        "C= int(input(\"Digite um número inteiro:\"))\n",
        "D= int(input(\"Digite um número inteiro:\"))\n",
        "\n",
        "if (C > D):\n",
        "  print(\"O valor de C é maior que D\")\n",
        "else:\n",
        "  print(\"O valor de D é maior que C \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_LvJNF0vjDxz",
        "outputId": "a89c7c38-12b8-4bb5-a492-3240fdeb7981"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro:10\n",
            "Digite um número inteiro:20\n",
            "O valor de D é maior que C \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Ler e apresnetar em ordem decrescente\n",
        "valor1 = int(input(\"Digite o primeiro valor: \"))\n",
        "valor2 = int(input(\"Digite o segundo valor: \"))\n",
        "\n",
        "if valor1 > valor2:\n",
        "    print(f\"Os valores em ordem decrescente são: {valor1}, {valor2}\")\n",
        "else:\n",
        "    print(f\"Os valores em ordem decrescente são: {valor2}, {valor1}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WxqVdsdrj2Sy",
        "outputId": "42b7a715-16a7-418e-bdec-1bd9988dc01f"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite o primeiro valor: 6\n",
            "Digite o segundo valor: 8\n",
            "Os valores em ordem decrescente são: 8, 6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Validade da senha\n",
        "\n",
        "senha= int(input(\"Digite sua senha: \"))\n",
        "\n",
        "if (senha == 9238):\n",
        "  print(\"Acesso liberado\")\n",
        "else:\n",
        "  print(\"Acesso negado, verifique sua senha!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aLON3S-ekhHZ",
        "outputId": "58919b8b-9380-4bf1-8f27-625fc55954c0"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite sua senha: 9238\n",
            "Acesso liberado\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Emprestimo\n",
        "salario = float(input(\"Digite seu sálario:\"))\n",
        "prestacao = float(input(\"Digite o valor da prestação:\"))\n",
        "maximo = salario* 0.30\n",
        "\n",
        "if(prestacao <= maximo):\n",
        "  print(\"Emprestimo aprovado!\")\n",
        "else:\n",
        "  print(\"Emprestimo negado!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F-FFpZwzl7PB",
        "outputId": "765a0e52-f99b-4b2e-87ae-0bfb852b8655"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite seu sálario:1000\n",
            "Digite o valor da prestação:200\n",
            "Emprestimo aprovado!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Estrutura de selção aninhada (Aula 5)**"
      ],
      "metadata": {
        "id": "8lTZOy2dpDJI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Votação com elif\n",
        "\n",
        "idade= int(input(\"Digite sua idade:\"))\n",
        "\n",
        "if(idade >=18):\n",
        "  print(\"Você deve votar!\")\n",
        "elif(idade>=16):\n",
        "  print(\"Você ja pode votar!\")\n",
        "else:\n",
        "  print(\"Você ainda não pode votar!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vKS2WUSBpPsg",
        "outputId": "2005607e-e74f-4332-a288-d713dfcf2104"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite sua idade:20\n",
            "Você deve votar!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Votação somente com if\n",
        "\n",
        "idade= int(input(\"Digite sua idade:\"))\n",
        "\n",
        "if(idade >=18):\n",
        "  print(\"Você deve votar!\")\n",
        "if(idade>=16):\n",
        "  print(\"Você ja pode votar!\")\n",
        "if(idade<16):\n",
        "  print(\"Você ainda não pode votar!\")\n",
        ""
      ],
      "metadata": {
        "id": "R66Ghl1XvPdg"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#votação com if e else\n",
        "\n",
        "idade= int(input(\"Digite sua idade:\"))\n",
        "\n",
        "if(idade >=18):\n",
        "  print(\"Você deve votar!\")\n",
        "if(idade>=16):\n",
        "  print(\"Você ja pode votar!\")\n",
        "else:\n",
        "  print(\"Você ainda não pode votar!\")"
      ],
      "metadata": {
        "id": "hPzWJvbEwKFY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Continuação do IMC\n",
        "\n",
        "peso = float(input(\"Digite seu peso atual:\"))\n",
        "altura= float(input(\"Digite sua altura:\"))\n",
        "\n",
        "IMC= peso/(altura **2)\n",
        "\n",
        "if (IMC <18.5):\n",
        "    print (\"Você está abaixo do peso\")\n",
        "elif ( IMC < 25):\n",
        "    print (\"Você está no peso ideal\")\n",
        "elif ( IMC < 30):\n",
        "    print (\"Você está com sobrepeso\")\n",
        "else:\n",
        "  print(\"Obeso\")\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wv36UPKex3dp",
        "outputId": "78a7a988-4833-4b15-9b41-cee52da8512f"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite seu peso atual:83\n",
            "Digite sua altura:1.75\n",
            "Você está com sobrepeso\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Pedra, pepel e tesoura\n",
        "alice= input(\"Digite a jogada de Alice: \")\n",
        "bob= input(\"Digite a  jogada de Bob: \")\n",
        "\n",
        "if (alice == bob):\n",
        "  print(\"Empate!\")\n",
        "elif ((alice == \"pedra\") and (bob == \"tesoura\")) or ((alice == \"tesoura\") and (bob == \"papel\")) or ((alice ==\"papel\") and (bob == \"pedra\")):\n",
        "  print(\"Alice venceu!\")\n",
        "else:\n",
        "  print(\"Bob venceu!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kMVdyd7H18Vv",
        "outputId": "057106ec-170c-4364-f09f-36df00b60eee"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite a jogada de Alice: pedra\n",
            "Digite a  jogada de Bob: pedra\n",
            "Empate!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Estrutura de repetição (Aula 6)"
      ],
      "metadata": {
        "id": "_2CVruId-kvd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#contagem de 50 a 100 , pulando de 2 em 2\n",
        "x = 50\n",
        "while (x <= 100):\n",
        "  print(x)\n",
        "  x=x+2\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NZRQ2R0p-q42",
        "outputId": "5d4fc052-c464-4ff1-875c-ed0c296d4c29"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "50\n",
            "52\n",
            "54\n",
            "56\n",
            "58\n",
            "60\n",
            "62\n",
            "64\n",
            "66\n",
            "68\n",
            "70\n",
            "72\n",
            "74\n",
            "76\n",
            "78\n",
            "80\n",
            "82\n",
            "84\n",
            "86\n",
            "88\n",
            "90\n",
            "92\n",
            "94\n",
            "96\n",
            "98\n",
            "100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#contagem regressiva\n",
        "x = 10\n",
        "while (x >= 1):\n",
        "  print(x)\n",
        "  x=x-1\n",
        "print(\"Fim do programa!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T7x3s2ROIh8P",
        "outputId": "0a7f8421-b733-431c-da36-c20fb57a2240"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "10\n",
            "9\n",
            "8\n",
            "7\n",
            "6\n",
            "5\n",
            "4\n",
            "3\n",
            "2\n",
            "1\n",
            "Fim do programa!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#contar programação 5 vezes\n",
        "x = 51\n",
        "while (x <= 55 ):\n",
        "  print(\"Programação\")\n",
        "  x= x+1\n",
        "\n",
        "print(\"Fim do programa!\")\n",
        ""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mIt-g6nNJ1vn",
        "outputId": "019bac8a-67e3-4fd4-8517-71f997244935"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Programação\n",
            "Programação\n",
            "Programação\n",
            "Programação\n",
            "Programação\n",
            "Fim do programa!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Soma de 5 valores inteiros , retorne a soma dos 5 numeros\n",
        "\n",
        "x = 1\n",
        "soma = 0\n",
        "while (x <= 5):\n",
        "  numero= int(input(\"Digite um número inteiro:\"))\n",
        "  soma = soma + numero\n",
        "  x= x + 1\n",
        "print(\"A soma dos 5 números é:\", soma)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vb-CP3IELh_P",
        "outputId": "a2c8f338-9f59-436c-c82e-eea0e7678a66"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro:-3\n",
            "Digite um número inteiro:-2\n",
            "Digite um número inteiro:-8\n",
            "Digite um número inteiro:-5\n",
            "Digite um número inteiro:-29\n",
            "A soma dos 5 números é: -47\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "contador = 1\n",
        "soma = 0\n",
        "while (contador <= 5):\n",
        "  numero = int(input(\"Digite um número inteiro:\"))\n",
        "  soma = soma + numero\n",
        "  print(\"A soma parcial dos numeros é:\", soma)\n",
        "  contador = contador +1\n",
        "print(\"O valor do coontador é:\", contador)\n",
        "print(\"A soma dos 5 números é:\", soma)\n",
        "print (\"A média é:\",soma/(contador -1))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KUK411mEOYvp",
        "outputId": "668c2b19-64ca-4d90-f552-d762304cbd2c"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro:10\n",
            "A soma parcial dos numeros é: 10\n",
            "Digite um número inteiro:10\n",
            "A soma parcial dos numeros é: 20\n",
            "Digite um número inteiro:10\n",
            "A soma parcial dos numeros é: 30\n",
            "Digite um número inteiro:10\n",
            "A soma parcial dos numeros é: 40\n",
            "Digite um número inteiro:10\n",
            "A soma parcial dos numeros é: 50\n",
            "O valor do coontador é: 6\n",
            "A soma dos 5 números é: 50\n",
            "A média é: 10.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#leitura e soma dos numeros ate o numero digitado ser igual a zero , se for zero finalize mostrando a soma e a média\n",
        "valor = int(input(\"Digite um número inteiro:\"))\n",
        "quantidade =0\n",
        "soma= 0\n",
        "while (valor != -1):\n",
        "  soma = soma + valor\n",
        "  quantidade = quantidade + 1\n",
        "  valor = int(input(\"Digite um número inteiro:\"))\n",
        "\n",
        "if (quantidade> 0 ):\n",
        "  print(\"A soma dos  números é:\", soma)\n",
        "  print(\"A média é:\",soma/(quantidade))\n",
        "else:\n",
        "  print(\"Sequencia vazia!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2xYY_vaFPhLv",
        "outputId": "5894b179-ab7d-407a-9a7b-8edb7554fce8"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Digite um número inteiro:3\n",
            "Digite um número inteiro:-1\n",
            "A soma dos  números é: 3\n",
            "A média é: 3.0\n"
          ]
        }
      ]
    }
  ]
}
